1. Length of Objects (Size): 
   Use .size() to get the length of vectors or strings.

2. Boolean Operations: 
   || is used for logical OR, && for logical AND.

3. Maps (unordered_map): 
   Declare an unordered map using unordered_map<key_type, value_type>.
   Use square brackets [] to insert and retrieve values.
   To check if your key exists do the folloiwng:
   if (myMap.find(key) != myMap.end()) {

   Map access is a ref, perform operations on it
   // Directly push the string into the corresponding vector in the map
   anagram_groups[sorted_s].push_back(strs[i]);

   Getting Keys/Values
   for (auto x : umap) 
    cout << x.first << " " <<  x.second << endl; 

4. Sets (unordered_set): 
   Use insert() to add an element.
   Use erase() to remove an element.
   Use .count() to check if an element exists.

5. Vectors (Dynamic Arrays): 
   Declare vectors using vector<type>.
   vector<type> vec_name = {ele, ele2, .....};
   Use .push_back() to append elements.
   Use .pop_back() to remove the last element.
   for (auto& it : my_vec) { //Stuff }
   vector<int> myVector = {1, 2, 3};  // vector with declared iniital values.

6. Sorting: 
   Use sort(begin, end) from <algorithm> to sort vectors in place.

7. Imports
Examples:
#include <unordered_map>
#include <string>
#include <vector>
using namespace std;

8. char validation

char c = 'A';
int unicode = static_cast<int>(c); // ord() equivalent
std::cout << unicode << std::endl; // Outputs 65

int codePoint = 65;
char c = static_cast<char>(codePoint); // chr() equivalent
std::cout << c << std::endl; // Outputs 'A'